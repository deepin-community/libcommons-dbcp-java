Description: Compatibility patch for OpenJDK7
Origin: https://bugzilla.redhat.com/show_bug.cgi?id=796638
Author: Pavel Tisnovsky <ptisnovs@redhat.com>

--- a/src/java/org/apache/commons/dbcp/BasicDataSource.java
+++ b/src/java/org/apache/commons/dbcp/BasicDataSource.java
@@ -24,10 +24,12 @@
 import java.util.ArrayList;
 import java.util.Iterator;
 import java.util.Collections;
+import java.util.logging.Logger;
 import java.sql.Connection;
 import java.sql.Driver;
 import java.sql.DriverManager;
 import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
 import javax.sql.DataSource;
 
 import org.apache.commons.pool.KeyedObjectPoolFactory;
@@ -1579,4 +1581,10 @@
             logWriter.println(message);
         }
     }
+
+    /* This functionality is not implemented yet */
+    public Logger getParentLogger() throws SQLFeatureNotSupportedException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
 }
--- a/src/java/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java
+++ b/src/java/org/apache/commons/dbcp/cpdsadapter/DriverAdapterCPDS.java
@@ -19,10 +19,12 @@
 
 import java.util.Hashtable;
 import java.util.Properties;
+import java.util.logging.Logger;
 import java.io.PrintWriter;
 import java.io.Serializable;
 import java.sql.DriverManager;
 import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
 import javax.sql.PooledConnection;
 import javax.sql.ConnectionPoolDataSource;
 import javax.naming.Name;
@@ -719,4 +721,10 @@
     {
         _maxPreparedStatements = maxPreparedStatements;
     }
+
+    /* This functionality is not implemented yet */
+    public Logger getParentLogger() throws SQLFeatureNotSupportedException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
 }
--- a/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java
+++ b/src/java/org/apache/commons/dbcp/datasources/PerUserPoolDataSource.java
@@ -21,10 +21,12 @@
 import java.io.ObjectInputStream;
 import java.sql.Connection;
 import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
 import java.util.HashMap;
 import java.util.Iterator;
 import java.util.Map;
 import java.util.NoSuchElementException;
+import java.util.logging.Logger;
 
 import javax.naming.NamingException;
 import javax.naming.Reference;
@@ -561,4 +563,10 @@
         CPDSConnectionFactory mgr = (CPDSConnectionFactory) managers.get(key);
         return mgr == null ? null : (GenericObjectPool) mgr.getPool();
     }
+
+    /* This functionality is not implemented yet */
+    public Logger getParentLogger() throws SQLFeatureNotSupportedException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
 }
--- a/src/java/org/apache/commons/dbcp/datasources/SharedPoolDataSource.java
+++ b/src/java/org/apache/commons/dbcp/datasources/SharedPoolDataSource.java
@@ -21,6 +21,8 @@
 import java.io.ObjectInputStream;
 import java.sql.Connection;
 import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
+import java.util.logging.Logger;
 
 import javax.naming.NamingException;
 import javax.naming.Reference;
@@ -269,5 +271,11 @@
             throw new IOException("NamingException: " + e);
         }
     }
+
+    /* This functionality is not implemented yet */
+    public Logger getParentLogger() throws SQLFeatureNotSupportedException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
 }
 
--- a/src/java/org/apache/commons/dbcp/DelegatingCallableStatement.java
+++ b/src/java/org/apache/commons/dbcp/DelegatingCallableStatement.java
@@ -37,6 +37,7 @@
 import java.sql.RowId;
 import java.sql.SQLXML;
 /* JDBC_4_ANT_KEY_END */
+import java.sql.SQLFeatureNotSupportedException;
 
 /**
  * A base delegating implementation of {@link CallableStatement}.
@@ -661,4 +662,14 @@
         }
     }
 /* JDBC_4_ANT_KEY_END */
+
+    /* This functionality is not implemented yet */
+    public <T> T getObject(String columnLabel, Class<T> type) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public <T> T getObject(int columnIndex, Class<T> type) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
 }
--- a/src/java/org/apache/commons/dbcp/DelegatingConnection.java
+++ b/src/java/org/apache/commons/dbcp/DelegatingConnection.java
@@ -27,6 +27,7 @@
 import java.util.Iterator;
 import java.util.List;
 import java.util.Map;
+import java.util.concurrent.Executor;
 import java.sql.ResultSet;
 /* JDBC_4_ANT_KEY_BEGIN */
 import java.sql.Array;
@@ -40,6 +41,7 @@
 import java.util.Collections;
 import java.util.Properties;
 /* JDBC_4_ANT_KEY_END */
+import java.sql.SQLFeatureNotSupportedException;
 
 /**
  * A base delegating implementation of {@link Connection}.
@@ -678,5 +680,31 @@
             return null;
         }
     }
-/* JDBC_4_ANT_KEY_END */
+    /* JDBC_4_ANT_KEY_END */
+
+    /* This functionality is not implemented yet */
+    public int getNetworkTimeout() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public void setNetworkTimeout(Executor executor, int milliseconds) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public void abort(Executor executor) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public String getSchema() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public void setSchema(String schema) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
 }
+
--- a/src/java/org/apache/commons/dbcp/DelegatingDatabaseMetaData.java
+++ b/src/java/org/apache/commons/dbcp/DelegatingDatabaseMetaData.java
@@ -24,6 +24,7 @@
 import java.sql.RowIdLifetime;
 /* JDBC_4_ANT_KEY_END */
 import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
 
 /**
  * A base delegating implementation of {@link DatabaseMetaData}.
@@ -1208,4 +1209,13 @@
 
     /* JDBC_4_ANT_KEY_END */
 
+    /* This functionality is not implemented yet */
+    public boolean generatedKeyAlwaysReturned() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public ResultSet getPseudoColumns(String catalog, String schemaPattern, String tableNamePattern, String columnNamePattern) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
 }
--- a/src/java/org/apache/commons/dbcp/DelegatingPreparedStatement.java
+++ b/src/java/org/apache/commons/dbcp/DelegatingPreparedStatement.java
@@ -34,6 +34,7 @@
 import java.sql.RowId;
 import java.sql.SQLXML;
 /* JDBC_4_ANT_KEY_END */
+import java.sql.SQLFeatureNotSupportedException;
 
 /**
  * A base delegating implementation of {@link PreparedStatement}.
@@ -402,4 +403,15 @@
         }
     }
 /* JDBC_4_ANT_KEY_END */
+
+    /* This functionality is not implemented yet */
+    public boolean isCloseOnCompletion() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public void closeOnCompletion() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
 }
--- a/src/java/org/apache/commons/dbcp/DelegatingResultSet.java
+++ b/src/java/org/apache/commons/dbcp/DelegatingResultSet.java
@@ -40,6 +40,7 @@
 import java.sql.RowId;
 import java.sql.SQLXML;
 /* JDBC_4_ANT_KEY_END */
+import java.sql.SQLFeatureNotSupportedException;
 
 /**
  * A base delegating implementation of {@link ResultSet}.
@@ -1079,4 +1080,14 @@
         }
     }
 /* JDBC_4_ANT_KEY_END */
+
+    /* This functionality is not implemented yet */
+    public <T> T getObject(String columnLabel, Class<T> type) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public <T> T getObject(int columnIndex, Class<T> type) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
 }
--- a/src/java/org/apache/commons/dbcp/DelegatingStatement.java
+++ b/src/java/org/apache/commons/dbcp/DelegatingStatement.java
@@ -22,6 +22,7 @@
 import java.sql.SQLException;
 import java.sql.SQLWarning;
 import java.sql.Statement;
+import java.sql.SQLFeatureNotSupportedException;
 import java.util.List;
 
 /**
@@ -386,4 +387,15 @@
         }
     }
 /* JDBC_4_ANT_KEY_END */
+
+    /* This functionality is not implemented yet */
+    public boolean isCloseOnCompletion() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public void closeOnCompletion() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
 }
--- a/src/java/org/apache/commons/dbcp/PoolableCallableStatement.java
+++ b/src/java/org/apache/commons/dbcp/PoolableCallableStatement.java
@@ -21,6 +21,7 @@
 import java.sql.Connection;
 import java.sql.ResultSet;
 import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
 import java.util.List;
 
 import org.apache.commons.pool.KeyedObjectPool;
@@ -123,4 +124,13 @@
         super.passivate();
     }
 
+    /* This functionality is not implemented yet */
+    public <T> T getObject(String columnLabel, Class<T> type) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public <T> T getObject(int columnIndex, Class<T> type) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
 }
--- a/src/java/org/apache/commons/dbcp/PoolablePreparedStatement.java
+++ b/src/java/org/apache/commons/dbcp/PoolablePreparedStatement.java
@@ -21,6 +21,7 @@
 import java.sql.PreparedStatement;
 import java.sql.ResultSet;
 import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
 import java.util.List;
 
 import org.apache.commons.pool.KeyedObjectPool;
@@ -137,4 +138,14 @@
         super.passivate();
     }
 
+    /* This functionality is not implemented yet */
+    public boolean isCloseOnCompletion() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public void closeOnCompletion() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
 }
--- a/src/java/org/apache/commons/dbcp/PoolingConnection.java
+++ b/src/java/org/apache/commons/dbcp/PoolingConnection.java
@@ -21,8 +21,10 @@
 import java.sql.Connection;
 import java.sql.PreparedStatement;
 import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
 
 import java.util.NoSuchElementException;
+import java.util.concurrent.Executor;
 
 import org.apache.commons.pool.KeyedObjectPool;
 import org.apache.commons.pool.KeyedPoolableObjectFactory;
@@ -455,4 +457,30 @@
             return buf.toString();
         }
     }
+
+    /* This functionality is not implemented yet */
+    public int getNetworkTimeout() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public void setNetworkTimeout(Executor executor, int milliseconds) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public void abort(Executor executor) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public String getSchema() throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
+    /* This functionality is not implemented yet */
+    public void setSchema(String schema) throws SQLException {
+        throw new SQLFeatureNotSupportedException();
+    }
 }
+
--- a/src/java/org/apache/commons/dbcp/PoolingDataSource.java
+++ b/src/java/org/apache/commons/dbcp/PoolingDataSource.java
@@ -23,10 +23,12 @@
 import java.sql.DatabaseMetaData;
 import java.sql.PreparedStatement;
 import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
 import java.sql.SQLWarning;
 import java.sql.Statement;
 import java.util.Map;
 import java.util.NoSuchElementException;
+import java.util.logging.Logger;
 
 import javax.sql.DataSource;
 
@@ -437,4 +439,9 @@
             }
         }
     }
+
+    /* This functionality is not implemented yet */
+    public Logger getParentLogger() throws SQLFeatureNotSupportedException {
+        throw new SQLFeatureNotSupportedException();
+    }
 }
--- a/src/java/org/apache/commons/dbcp/PoolingDriver.java
+++ b/src/java/org/apache/commons/dbcp/PoolingDriver.java
@@ -27,6 +27,7 @@
 import java.sql.DriverPropertyInfo;
 import java.sql.PreparedStatement;
 import java.sql.SQLException;
+import java.sql.SQLFeatureNotSupportedException;
 import java.sql.SQLWarning;
 import java.sql.Statement;
 import java.util.HashMap;
@@ -34,6 +35,7 @@
 import java.util.NoSuchElementException;
 import java.util.Properties;
 import java.util.Set;
+import java.util.logging.Logger;
 
 import org.apache.commons.jocl.JOCLContentHandler;
 import org.apache.commons.pool.ObjectPool;
@@ -496,4 +498,10 @@
             }
         }
     }
+
+    /* This functionality is not implemented yet */
+    public Logger getParentLogger() throws SQLFeatureNotSupportedException {
+        throw new SQLFeatureNotSupportedException();
+    }
+
 }
--- a/src/test/org/apache/commons/dbcp/TesterStatement.java
+++ b/src/test/org/apache/commons/dbcp/TesterStatement.java
@@ -296,4 +296,15 @@
         throw new SQLException("Not implemented.");
     }
 /* JDBC_4_ANT_KEY_END */
+
+    /* JDBC_4_1_ANT_KEY_BEGIN */
+    @Override
+    public void closeOnCompletion() throws SQLException {
+    }
+
+    @Override
+    public boolean isCloseOnCompletion() throws SQLException {
+        return false;
+    }
+    /* JDBC_4_1_ANT_KEY_END */
 }
--- a/src/test/org/apache/commons/dbcp/TesterCallableStatement.java
+++ b/src/test/org/apache/commons/dbcp/TesterCallableStatement.java
@@ -456,4 +456,18 @@
     public void setNClob(String parameterName, Reader reader) throws SQLException {
     }
 /* JDBC_4_ANT_KEY_END */
+
+    /* JDBC_4_1_ANT_KEY_BEGIN */
+    @Override
+    public <T> T getObject(int parameterIndex, Class<T> type)
+            throws SQLException {
+        return null;
+    }
+
+    @Override
+    public <T> T getObject(String parameterName, Class<T> type)
+            throws SQLException {
+        return null;
+    }
+    /* JDBC_4_1_ANT_KEY_END */
 }
--- a/src/test/org/apache/commons/dbcp/TesterDatabaseMetaData.java
+++ b/src/test/org/apache/commons/dbcp/TesterDatabaseMetaData.java
@@ -761,4 +761,18 @@
     }
 
     /* JDBC_4_ANT_KEY_END */
+
+    /* JDBC_4_1_ANT_KEY_BEGIN */
+    @Override
+    public ResultSet getPseudoColumns(String catalog, String schemaPattern,
+            String tableNamePattern, String columnNamePattern)
+            throws SQLException {
+        return null;
+    }
+
+    @Override
+    public boolean generatedKeyAlwaysReturned() throws SQLException {
+        return false;
+    }
+    /* JDBC_4_1_ANT_KEY_END */
 }
--- a/src/test/org/apache/commons/dbcp/TesterResultSet.java
+++ b/src/test/org/apache/commons/dbcp/TesterResultSet.java
@@ -969,4 +969,17 @@
         throw new SQLException("Not implemented.");
     }
 /* JDBC_4_ANT_KEY_END */
+
+    /* JDBC_4_1_ANT_KEY_BEGIN */
+    @Override
+    public <T> T getObject(int columnIndex, Class<T> type) throws SQLException {
+        throw new SQLException("Not implemented.");
+    }
+
+    @Override
+    public <T> T getObject(String columnLabel, Class<T> type)
+            throws SQLException {
+        throw new SQLException("Not implemented.");
+    }
+    /* JDBC_4_1_ANT_KEY_END */
 }
--- a/src/test/org/apache/commons/dbcp/TesterDriver.java
+++ b/src/test/org/apache/commons/dbcp/TesterDriver.java
@@ -116,6 +116,13 @@
         return new DriverPropertyInfo[0];
     }
 
+    /* JDBC_4_1_ANT_KEY_BEGIN */
+    @Override
+    public java.util.logging.Logger getParentLogger() throws java.sql.SQLFeatureNotSupportedException {
+        throw new java.sql.SQLFeatureNotSupportedException();
+    }
+    /* JDBC_4_1_ANT_KEY_END */
+
     protected static final String CONNECT_STRING = "jdbc:apache:commons:testdriver";
 
     // version numbers
--- a/src/test/org/apache/commons/dbcp/TesterConnection.java
+++ b/src/test/org/apache/commons/dbcp/TesterConnection.java
@@ -334,4 +334,32 @@
         throw new SQLException("Not implemented.");
     }
 /* JDBC_4_ANT_KEY_END */
+
+    /* JDBC_4_1_ANT_KEY_BEGIN */
+    @Override
+    public void setSchema(String schema) throws SQLException {
+        throw new SQLException("Not implemented.");
+    }
+
+    @Override
+    public String getSchema() throws SQLException {
+        throw new SQLException("Not implemented.");
+    }
+
+    @Override
+    public void abort(java.util.concurrent.Executor executor) throws SQLException {
+        throw new SQLException("Not implemented.");
+    }
+
+    @Override
+    public void setNetworkTimeout(java.util.concurrent.Executor executor, int milliseconds)
+            throws SQLException {
+        throw new SQLException("Not implemented.");
+    }
+
+    @Override
+    public int getNetworkTimeout() throws SQLException {
+        throw new SQLException("Not implemented.");
+    }
+    /* JDBC_4_1_ANT_KEY_END */
 }
--- a/src/test/org/apache/commons/dbcp/datasources/ConnectionPoolDataSourceProxy.java
+++ b/src/test/org/apache/commons/dbcp/datasources/ConnectionPoolDataSourceProxy.java
@@ -80,4 +80,10 @@
         return tpc; 
     }
 
+    /* JDBC_4_1_ANT_KEY_BEGIN */
+    @Override
+    public java.util.logging.Logger getParentLogger() throws java.sql.SQLFeatureNotSupportedException {
+        throw new java.sql.SQLFeatureNotSupportedException();
+    }
+    /* JDBC_4_1_ANT_KEY_END */
 }
